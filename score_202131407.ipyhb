{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1회차, 2회차, ... 15회차 점수 입력100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n",
      "중간고사 점수100\n",
      "기말고사 점수100\n",
      "['100', '100', '100', '100', '100', '100', '100', '100', '100', '100', '100', '100', '100', '100', '100']\n",
      "100 /100 /100 /100 /100 /100 /100 /100 /100 /100 /100 /100 /100 /100 /100 /합계 1500 /평균값 100.00 /비중값  40.00 \n",
      "과제평균(40%): 40.0 중간평균(30%): 30.0 기말평균(30%): 30.0 총합 : 100.0\n",
      "등급은 A 입니다.\n"
     ]
    }
   ],
   "source": [
    "data=input('1회차, 2회차, ... 15회차 점수 입력') \n",
    "test1=int(input('중간고사 점수'))\n",
    "test2=int(input('기말고사 점수'))\n",
    "\n",
    "print(data.split())\n",
    "a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15=map(int,data.split()) #int는 입력값\n",
    "sam_a=a1+a2+a3+a4+a5+a6+a7+a8+a9+a10+a11+a12+a13+a14+a15\n",
    "\n",
    "na=sam_a/15\n",
    "goap=na*0.4\n",
    "goap2=test1*0.3\n",
    "goap3=test2*0.3 \n",
    "\n",
    "score=goap+goap2+goap3\n",
    "if 100>= score>=90: \n",
    "    grade='A'\n",
    "elif 90>score>=80:\n",
    "    grade='B'\n",
    "elif 80>score>=70:\n",
    "    grade='C'\n",
    "elif 70>score>=60:\n",
    "    grade='D'\n",
    "else:#elif score<60:\n",
    "    #grade='F'\n",
    "    grade='F'\n",
    "    \n",
    "\n",
    "print('%3d /%3d /%3d /%3d /%3d /%3d /%3d /%3d /%3d /%3d /%3d /%3d /%3d /%3d /%3d /합계 %3d /평균값 %6.2f /비중값 %6.2f '\n",
    "      %(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, sam_a, na, goap))\n",
    "\n",
    "print('과제평균(40%):',goap, '중간평균(30%):',goap2, '기말평균(30%):',goap3, '총합 :',goap+goap2+goap3)\n",
    "\n",
    "print('등급은' ,grade, '입니다.')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
